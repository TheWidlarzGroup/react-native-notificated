"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[208],{5680:(e,n,t)=>{t.d(n,{xA:()=>g,yg:()=>y});var i=t(6540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=i.createContext({}),c=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},g=function(e){var n=c(e.components);return i.createElement(s.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},f=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),p=c(t),f=o,y=p["".concat(s,".").concat(f)]||p[f]||u[f]||r;return t?i.createElement(y,a(a({ref:n},g),{},{components:t})):i.createElement(y,a({ref:n},g))}));function y(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,a=new Array(r);a[0]=f;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[p]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<r;c++)a[c]=t[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}f.displayName="MDXCreateElement"},2648:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var i=t(9668),o=(t(6540),t(5680));const r={sidebar_position:2},a="\u270f\ufe0f Order of overwriting settings",l={unversionedId:"intro/comprehensive-configuration/order-of-settings-overwriting",id:"intro/comprehensive-configuration/order-of-settings-overwriting",title:"\u270f\ufe0f Order of overwriting settings",description:"In the React Native Notifications library, we can pass some settings on different levels.",source:"@site/docs/intro/comprehensive-configuration/order-of-settings-overwriting.md",sourceDirName:"intro/comprehensive-configuration",slug:"/intro/comprehensive-configuration/order-of-settings-overwriting",permalink:"/react-native-notificated/docs/intro/comprehensive-configuration/order-of-settings-overwriting",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"intro",previous:{title:"\u2699\ufe0f Global notifications settings",permalink:"/react-native-notificated/docs/intro/comprehensive-configuration/global-notifications-settings"},next:{title:"\ud83d\uddbc\ufe0f Default Variants",permalink:"/react-native-notificated/docs/intro/default-variants-config/default-variants"}},s={},c=[{value:"Global range (for all notifications):",id:"global-range-for-all-notifications",level:2},{value:"Notification type range (for example for all success notifications):",id:"notification-type-range-for-example-for-all-success-notifications",level:2},{value:"Instance range (for the single notification):",id:"instance-range-for-the-single-notification",level:2},{value:"Conclusion",id:"conclusion",level:2}],g={toc:c};function p(e){let{components:n,...t}=e;return(0,o.yg)("wrapper",(0,i.A)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"\ufe0f-order-of-overwriting-settings"},"\u270f\ufe0f Order of overwriting settings"),(0,o.yg)("br",null),(0,o.yg)("p",null,"In the React Native Notifications library, we can pass some settings on different levels. ",(0,o.yg)("br",null),"\nWhen we go deeper and the range of the settings is narrower, the importance of the setting is higher. ",(0,o.yg)("br",null),"\nFor example, we can set the ",(0,o.yg)("inlineCode",{parentName:"p"},"titleColor")," of the notification in the: ",(0,o.yg)("br",null)),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"global range (for all notifications)"),(0,o.yg)("li",{parentName:"ul"},"notification type range (for example for all errors)"),(0,o.yg)("li",{parentName:"ul"},"instance range (for the single notification)")),(0,o.yg)("p",null,"Instance range overwrites notification type range and global range. Notification type range overwrites global range.",(0,o.yg)("br",null)),(0,o.yg)("p",null,"Let's consider the case where we set all possible options for single ",(0,o.yg)("inlineCode",{parentName:"p"},"success")," notification on all depth levels: ",(0,o.yg)("br",null),"\n(all the props for other notifications are the same)",(0,o.yg)("br",null)),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { SafeAreaView } from 'react-native'\nimport { createNotifications, SlideInLeftSlideOutRight } from 'react-native-notificated'\nimport { styles } from './styles'\nimport { SuccessButton } from '../components/basicExamples/SuccessButton'\n\nconst { useNotifications, NotificationsProvider } = createNotifications({\n  isNotch: true,\n  duration: 3000,\n  notificationPosition: 'top',\n  animationConfig: SlideInLeftSlideOutRight,\n  defaultStylesSettings: {\n    darkMode: false,\n    globalConfig: {\n      titleSize: 20,\n      titleColor: '#4B0082',\n      descriptionSize: 12,\n      descriptionColor: '#4B0082',\n      bgColor: '#FFFFF0',\n      borderType: 'accent',\n      borderRadius: 25,\n      accentColor: '#B0E0E6',\n      borderWidth: 3,\n      multiline: 5,\n      defaultIconType: 'color',\n      leftIconSource: require('../../assets/custom-icon.png'),\n    },\n    successConfig: {\n      titleSize: 16,\n      titleColor: '#4C0',\n      descriptionSize: 11,\n      descriptionColor: '#4C0',\n      bgColor: '#FFFFF0',\n      borderType: 'accent',\n      borderRadius: 25,\n      accentColor: '#B0E0E6',\n      borderWidth: 3,\n      multiline: 5,\n      defaultIconType: 'color',\n      leftIconSource: require('../../assets/custom-icon.png'),\n    },\n  },\n})\n\nexport const Example = () => {\n  const { notify } = useNotifications()\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <NotificationsProvider />\n      <SuccessButton\n        onPress={() =>\n          notify('success', {\n            params: {\n              description: 'This is where the toast text goes',\n              title: 'Success',\n              style: {\n                titleSize: 24,\n                titleColor: '#4B0082',\n                descriptionSize: 20,\n                descriptionColor: '#4B0082',\n                bgColor: '#FFFFF0',\n                borderType: 'border',\n                borderRadius: 15,\n                accentColor: '#B0E0E6',\n                borderWidth: 1,\n                multiline: 3,\n                defaultIconType: 'monochromatic',\n                leftIconSource: require('../../assets/custom-icon.png'),\n              },\n            },\n            config: {\n              notificationPosition: 'center',\n              animationConfig: SlideInLeftSlideOutRight,\n              duration: 100,\n            },\n          })\n        }\n      />\n    </SafeAreaView>\n  )\n}\n")),(0,o.yg)("p",null,"We can divide them as above for the three depth levels. Let's take a look at what properties can we pass at different levels:"),(0,o.yg)("h2",{id:"global-range-for-all-notifications"},"Global range (for all notifications):"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx"},"const { useNotifications, NotificationsProvider } = createNotifications({\n  isNotch: true,\n  duration: 30,\n  notificationPosition: 'top',\n  notificationWidth: 400,\n  animationConfig: SlideInLeftSlideOutRight,\n  defaultStylesSettings: {\n    darkMode: false,\n    globalConfig: {\n      titleSize: 20,\n      titleColor: '#4B0082',\n      descriptionSize: 12,\n      descriptionColor: '#4B0082',\n      bgColor: '#FFFFF0',\n      borderType: 'accent',\n      borderRadius: 25,\n      accentColor: '#B0E0E6',\n      borderWidth: 3,\n      multiline: 5,\n      defaultIconType: 'color',\n      leftIconSource: require('../../assets/custom-icon.png'),\n    },\n  },\n})\n")),(0,o.yg)("p",null,"All those properties:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"isNotch"),(0,o.yg)("li",{parentName:"ul"},"duration"),(0,o.yg)("li",{parentName:"ul"},"notificationPosition"),(0,o.yg)("li",{parentName:"ul"},"notificationWidth"),(0,o.yg)("li",{parentName:"ul"},"animationConfig")),(0,o.yg)("p",null,"(defaultStylesSettings)"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"darkMode"),(0,o.yg)("li",{parentName:"ul"},"globalConfig (with all the styles properties)")),(0,o.yg)("p",null,"Can be set up for all notifications in the app. Some of them can be set up only here:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"isNotch"),(0,o.yg)("li",{parentName:"ul"},"darkMode")),(0,o.yg)("p",null,"The rest can be overwritten at lower levels - notification type range (for example, for all errors) and instance range (for the single notification)."),(0,o.yg)("h2",{id:"notification-type-range-for-example-for-all-success-notifications"},"Notification type range (for example for all success notifications):"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx"},"const { useNotifications, NotificationsProvider } = createNotifications({\n  defaultStylesSettings: {\n    successConfig: {\n      titleSize: 16,\n      titleColor: '#4C0',\n      descriptionSize: 11,\n      descriptionColor: '#4C0',\n      bgColor: '#FFFFF0',\n      borderType: 'accent',\n      borderRadius: 25,\n      accentColor: '#B0E0E6',\n      borderWidth: 3,\n      multiline: 5,\n      defaultIconType: 'color',\n      leftIconSource: require('../../assets/custom-icon.png'),\n    },\n    errorConfig: {},\n    warningConfig: {},\n    infoConfig: {},\n  },\n})\n")),(0,o.yg)("p",null,"On the second level we can set only style properties for the different notification types:"),(0,o.yg)("p",null,"(defaultStylesSettings)"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"successConfig"),(0,o.yg)("li",{parentName:"ul"},"errorConfig"),(0,o.yg)("li",{parentName:"ul"},"warningConfig"),(0,o.yg)("li",{parentName:"ul"},"infoConfig")),(0,o.yg)("p",null,"Properties set in these ",(0,o.yg)("inlineCode",{parentName:"p"},"configs")," will affect all notifications of a given type. All of them have the same properties inside.",(0,o.yg)("br",null),"\nThis level overwrites only style properties previously set at the global range. You cannot overwrite here other global properties. ",(0,o.yg)("br",null),"\nPlease notice that, if you set ",(0,o.yg)("inlineCode",{parentName:"p"},"globalConfig")," styles (for all notifications), and then you set ",(0,o.yg)("inlineCode",{parentName:"p"},"successConfig"),", then all ",(0,o.yg)("inlineCode",{parentName:"p"},"success")," type notifications will take style config from the ",(0,o.yg)("inlineCode",{parentName:"p"},"successConfig"),", but other notification types will take it from the ",(0,o.yg)("inlineCode",{parentName:"p"},"globalConfig"),"(unless you set their notification type style config for them).",(0,o.yg)("br",null),"\nAs you can see Notification types have a smaller range than global, but they are more important overall."),(0,o.yg)("h2",{id:"instance-range-for-the-single-notification"},"Instance range (for the single notification):"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx"},"<SuccessButton\n  onPress={() =>\n    notify('success', {\n      params: {\n        description: 'This is where the toast text goes',\n        title: 'Success',\n        style: {\n          titleSize: 24,\n          titleColor: '#4B0082',\n          descriptionSize: 20,\n          descriptionColor: '#4B0082',\n          bgColor: '#FFFFF0',\n          borderType: 'border',\n          borderRadius: 15,\n          accentColor: '#B0E0E6',\n          borderWidth: 1,\n          multiline: 3,\n          defaultIconType: 'monochromatic',\n          leftIconSource: require('../../assets/custom-icon.png'),\n        },\n      },\n      config: {\n        notificationPosition: 'center',\n        animationConfig: SlideInLeftSlideOutRight,\n        duration: 100,\n      },\n    })\n  }\n/>\n")),(0,o.yg)("p",null,"All those properties:"),(0,o.yg)("p",null,"(params)"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"description"),(0,o.yg)("li",{parentName:"ul"},"title"),(0,o.yg)("li",{parentName:"ul"},"style")),(0,o.yg)("p",null,"(config)"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"notificationPosition"),(0,o.yg)("li",{parentName:"ul"},"notificationWidth"),(0,o.yg)("li",{parentName:"ul"},"animationConfig"),(0,o.yg)("li",{parentName:"ul"},"duration")),(0,o.yg)("p",null,"Can be set up for one single notification when we initiate it. Some of them can be set only here:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"description"),(0,o.yg)("li",{parentName:"ul"},"title")),(0,o.yg)("p",null,"What makes sense, because every notification should have its reason. ",(0,o.yg)("br",null),"\nIf we set some property here, it has the highest level of importance (overwrites the same property in the Global range and Notification type range), but only for this single notification."),(0,o.yg)("h2",{id:"conclusion"},"Conclusion"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"In other words, if the President says something, it affects all the people in the country.")),(0,o.yg)("p",null,"But seriously, we can listen to him, but the president of our town can easily change his opinion and then his words will probably be more valuable for us."),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"If the president of our city says something, that will affect all the people in the city (smaller range, stronger attention).")),(0,o.yg)("p",null,"But then again, if our mother challenges the President\u2019s opinion, then the latter become irrelevant :)"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Truth be told, your mother probably has an impact on nobody else but yourself, but she definitely attracts your greatest attention! "),"."))}p.isMDXComponent=!0}}]);