"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[399],{5680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>g});var i=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=i.createContext({}),l=function(e){var n=i.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=l(e.components);return i.createElement(p.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},f=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(t),f=a,g=u["".concat(p,".").concat(f)]||u[f]||m[f]||o;return t?i.createElement(g,r(r({ref:n},c),{},{components:t})):i.createElement(g,r({ref:n},c))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,r=new Array(o);r[0]=f;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s[u]="string"==typeof e?e:a,r[1]=s;for(var l=2;l<o;l++)r[l]=t[l];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}f.displayName="MDXCreateElement"},2037:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var i=t(9668),a=(t(6540),t(5680));const o={sidebar_position:7},r="\ud83d\udced Push notifications example",s={unversionedId:"intro/examples/push-notifications-example",id:"intro/examples/push-notifications-example",title:"\ud83d\udced Push notifications example",description:"Here's an example of how you can handle push notifications in your application (when in foreground) using Firebase",source:"@site/docs/intro/examples/push-notifications-example.md",sourceDirName:"intro/examples",slug:"/intro/examples/push-notifications-example",permalink:"/react-native-notificated/docs/intro/examples/push-notifications-example",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"intro",previous:{title:"\ud83d\udd25 Redux example",permalink:"/react-native-notificated/docs/intro/examples/redux-example"},next:{title:"\ud83d\udd14 Notifcation In Modal Example",permalink:"/react-native-notificated/docs/intro/examples/notification-in-modal-example"}},p={},l=[{value:"\ud83d\udca1 Setup",id:"-setup",level:2},{value:"\ud83d\udc40 Example Implementation",id:"-example-implementation",level:2},{value:"App in Foreground",id:"app-in-foreground",level:3}],c={toc:l};function u(e){let{components:n,...t}=e;return(0,a.yg)("wrapper",(0,i.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"-push-notifications-example"},"\ud83d\udced Push notifications example"),(0,a.yg)("p",null,"Here's an example of how you can handle push notifications in your application (when in foreground) using ",(0,a.yg)("a",{parentName:"p",href:"https://rnfirebase.io/"},"Firebase"),"\nLet's go then! \ud83d\udcaa"),(0,a.yg)("h2",{id:"-setup"},"\ud83d\udca1 Setup"),(0,a.yg)("p",null,"Before we jump into setup proccess, make sure that you have created a new firebase project. You will need it later to send push notifications. If you haven't done it yet, you can do it ",(0,a.yg)("a",{parentName:"p",href:"https://console.firebase.google.com/"},"here"),"."),(0,a.yg)("p",null,"With a new firebase project created, it's time to proceed with installation of these two packages that will be necessary to handle push notifications:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://rnfirebase.io/#prerequisites"},"@react-native-firebase")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://rnfirebase.io/messaging/usage#installation"},"@react-native-firebase/messaging"))),(0,a.yg)("admonition",{type:"info"},(0,a.yg)("p",{parentName:"admonition"},"Documentation clearly describes the whole process of installation, so I will not focus on it here.\nBefore proceeding to the next step, make sure you have done all previous steps.")),(0,a.yg)("h2",{id:"-example-implementation"},"\ud83d\udc40 Example Implementation"),(0,a.yg)("h3",{id:"app-in-foreground"},"App in Foreground"),(0,a.yg)("p",null,"To handle push notifications in foreground we have to create a listener which will subscribe for all incoming firebase push events.\nWe can do this by using ",(0,a.yg)("inlineCode",{parentName:"p"},"messaging().onMessage()")," from ",(0,a.yg)("inlineCode",{parentName:"p"},"@react-native-firebase/messaging"),". Method ",(0,a.yg)("inlineCode",{parentName:"p"},"onMessage()")," takes an asynchronous function as a parameter, with an argument which is the push notification payload. Now we can use this data to set our in-app notification with a ",(0,a.yg)("inlineCode",{parentName:"p"},"notify()"),":"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-jsx"},"// ** imports\nimport messaging from '@react-native-firebase/messaging'\nimport { useNotifications } from 'react-native-notificated'\n\nexport const App = () => {\n  const { notify } = useNotifications()\n\n  useEffect(() => {\n    const unsubscribe = messaging().onMessage(async (remoteMessage) => {\n      notify('info', {\n        params: {\n          title: remoteMessage.notification?.title || 'defalut title',\n          description: remoteMessage.notification?.body,\n        },\n      })\n    })\n\n    return unsubscribe\n  }, [notify])\n\n  return // Some JSX\n}\n")))}u.isMDXComponent=!0}}]);