"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[14],{5680:(e,t,n)=>{n.d(t,{xA:()=>f,yg:()=>u});var i=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},f=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},y=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,f=l(e,["components","mdxType","originalType","parentName"]),p=c(n),y=o,u=p["".concat(s,".").concat(y)]||p[y]||g[y]||r;return n?i.createElement(u,a(a({ref:t},f),{},{components:n})):i.createElement(u,a({ref:t},f))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,a=new Array(r);a[0]=y;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<r;c++)a[c]=n[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}y.displayName="MDXCreateElement"},6592:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var i=n(9668),o=(n(6540),n(5680));const r={sidebar_position:2},a="\ud83d\udccc Notification position",l={unversionedId:"intro/default-variants-config/position",id:"intro/default-variants-config/position",title:"\ud83d\udccc Notification position",description:"\ud83c\udf9b Changing position",source:"@site/docs/intro/default-variants-config/position.md",sourceDirName:"intro/default-variants-config",slug:"/intro/default-variants-config/position",permalink:"/react-native-notificated/docs/intro/default-variants-config/position",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"intro",previous:{title:"\ud83d\udcec Single Notification Config",permalink:"/react-native-notificated/docs/intro/default-variants-config/props-config"},next:{title:"\ud83d\udccf Notification width",permalink:"/react-native-notificated/docs/intro/default-variants-config/width"}},s={},c=[{value:"\ud83c\udf9b Changing position",id:"-changing-position",level:2},{value:"Set the position for all notifications in the global config object:",id:"set-the-position-for-all-notifications-in-the-global-config-object",level:3},{value:"Set the position locally inside config object in a single notification instance:",id:"set-the-position-locally-inside-config-object-in-a-single-notification-instance",level:3},{value:"\ud83d\udd26 Position config priority",id:"-position-config-priority",level:2}],f={toc:c};function p(e){let{components:t,...n}=e;return(0,o.yg)("wrapper",(0,i.A)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"-notification-position"},"\ud83d\udccc Notification position"),(0,o.yg)("h4",{id:""}),(0,o.yg)("h2",{id:"-changing-position"},"\ud83c\udf9b Changing position"),(0,o.yg)("p",null,"You can change the position of the notifications displayed on the screen. ",(0,o.yg)("br",null),"\nThere are seven possible options to choose from:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"top")," - at the top of the screen"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"top-right")," - at the top right of the screen"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"top-left")," - at the top left of the screen"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"center")," - at the middle of the screen (y-axis)"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"bottom"),"- at the bottom of the screen"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"bottom-right")," - at the bottom right of the screen"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"bottom-left")," - at the bottom left of the screen")),(0,o.yg)("p",null,"The default setting for the ",(0,o.yg)("inlineCode",{parentName:"p"},"notificationPosition")," is the ",(0,o.yg)("inlineCode",{parentName:"p"},"top")," value."),(0,o.yg)("p",null,"Depending on whether you want to change the notification position for the whole app or only change it for a certain notification, you can either:"),(0,o.yg)("br",null),(0,o.yg)("h3",{id:"set-the-position-for-all-notifications-in-the-global-config-object"},"Set the position for all notifications in the global config object:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { SafeAreaView, Text } from 'react-native'\nimport { createNotifications } from 'react-native-notificated'\nimport { styles } from './styles'\n\nconst { NotificationsProvider, useNotifications } = createNotifications({\n  notificationPosition: 'center',\n})\n\nexport const ExampleNotification = () => {\n  const { notify } = useNotifications()\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <NotificationsProvider />\n      <Text\n        onPress={() =>\n          notify('error', {\n            params: {\n              description: 'This is where the toast text goes. ',\n              title: 'Error',\n            },\n          })\n        }>\n        Emit error\n      </Text>\n    </SafeAreaView>\n  )\n}\n")),(0,o.yg)("p",null,"Now all the notifications in the app will be displayed in the middle of the screen (y-axis) because we have set the ",(0,o.yg)("inlineCode",{parentName:"p"},"notificationPosition")," value for the ",(0,o.yg)("inlineCode",{parentName:"p"},"center"),"."),(0,o.yg)("br",null),(0,o.yg)("br",null),(0,o.yg)("h3",{id:"set-the-position-locally-inside-config-object-in-a-single-notification-instance"},"Set the position locally inside config object in a single notification instance:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { SafeAreaView, Text } from 'react-native'\nimport { createNotifications } from 'react-native-notificated'\nimport { styles } from './styles'\n\nconst { NotificationsProvider, useNotifications } = createNotifications({\n  notificationPosition: 'center',\n})\n\nexport const ExampleNotification = () => {\n  const { notify } = useNotifications()\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <NotificationsProvider />\n      <Text\n        onPress={() =>\n          notify('error', {\n            params: {\n              description: 'This is where the toast text goes',\n              title: 'Error',\n            },\n            config: {\n              notificationPosition: 'bottom',\n            },\n          })\n        }>\n        Emit error\n      </Text>\n    </SafeAreaView>\n  )\n}\n")),(0,o.yg)("p",null,"Now, all the notifications in the app (instead of this one ",(0,o.yg)("inlineCode",{parentName:"p"},"error")," notification in the example above) will be displayed in the middle of the screen (y-axis).",(0,o.yg)("br",null),"\nBut the ",(0,o.yg)("inlineCode",{parentName:"p"},"error")," notification from the example above will be displayed at the bottom of the screen because the local config overwrites the global config.",(0,o.yg)("br",null),"\nOf course, we can just set it locally, there is no need to set it globally if we don't need to. ",(0,o.yg)("br",null),"\n(You can read more about props overwriting in the ",(0,o.yg)("a",{parentName:"p",href:"../comprehensive-configuration/order-of-settings-overwriting"},"ORDER OF SETTINGS OVERWRITING")," section)"),(0,o.yg)("br",null),(0,o.yg)("br",null),(0,o.yg)("h2",{id:"-position-config-priority"},"\ud83d\udd26 Position config priority"),(0,o.yg)("p",null,"For each subsequent notification, the library looks for a notification position in the following order:"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},"First, it looks for a config defined in ",(0,o.yg)("inlineCode",{parentName:"li"},"notify")," payload"),(0,o.yg)("li",{parentName:"ol"},"Secondly, it looks for a global config from ",(0,o.yg)("inlineCode",{parentName:"li"},"createNotification")),(0,o.yg)("li",{parentName:"ol"},"At last, when no config is found, it uses the default behavior, which is ",(0,o.yg)("inlineCode",{parentName:"li"},"top"))),(0,o.yg)("br",null))}p.isMDXComponent=!0}}]);